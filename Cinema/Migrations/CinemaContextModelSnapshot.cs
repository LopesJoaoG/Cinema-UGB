// <auto-generated />
using System;
using Cinema.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Cinema.Models.Filme", b =>
                {
                    b.Property<long?>("FilmeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Duracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdadeIndicativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FilmeId");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("Cinema.Models.Ingresso", b =>
                {
                    b.Property<long?>("IngressoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<long?>("SessaoId")
                        .HasColumnType("bigint");

                    b.HasKey("IngressoId");

                    b.HasIndex("SessaoId");

                    b.ToTable("Ingressos");
                });

            modelBuilder.Entity("Cinema.Models.Sala", b =>
                {
                    b.Property<long?>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<float>("Poltrona")
                        .HasColumnType("real");

                    b.HasKey("SalaId");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Cinema.Models.Sessao", b =>
                {
                    b.Property<long?>("SessaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataHorario")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FilmeId")
                        .HasColumnType("bigint");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<long?>("SalaId")
                        .HasColumnType("bigint");

                    b.Property<int>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("SessaoId");

                    b.HasIndex("FilmeId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sessaos");
                });

            modelBuilder.Entity("Cinema.Models.Ingresso", b =>
                {
                    b.HasOne("Cinema.Models.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoId");

                    b.Navigation("Sessao");
                });

            modelBuilder.Entity("Cinema.Models.Sessao", b =>
                {
                    b.HasOne("Cinema.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId");

                    b.HasOne("Cinema.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId");

                    b.Navigation("Filme");

                    b.Navigation("Sala");
                });
#pragma warning restore 612, 618
        }
    }
}
